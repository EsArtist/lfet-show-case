// *** WARNING: DO NOT MODIFY *** This is a generated Java source code! 
// 
// Generated by LF-ET 2.1.5 (210417a), https://www.lohrfink.de/lfet
// From decision table
// "/opt/data/github/lfet-show-case/src/main/resources/lfet/LFETShowCase.lfet"
// 14.06.2021 09:16
// 

// Prolog Standard ---->
// profile LFET.Java.Prolog.Standard.Interface.Dt.ini not found
// used LF-ET 2.1.5 (210417a) build in default

package de.lfet.demo.application;

import javax.annotation.processing.Generated;
import org.springframework.stereotype.Component;

@Generated("LFET")
@Component
class LFETShowCase_RulesEngine
{
    final <T> void execute(LFETShowCase_Iface<T> iface, T model)
    {
 
    // Prolog Standard <----
        
        int ruleGroup = 1;
        boolean exit = false;
        
        while ( !exit )
        {
            exit = true;
            
            if ( ruleGroup == 1 )
            {
                if ( iface.__isAlter("<= 6", "[ 0 : 6 ]", 0.0, 6.0 /* <= 6 */ , model) )
                {
                    // Rule R01 ---->
                    
                    iface.__doTrace("LFETShowCase", "20210614.091623", 8, 1, model);
                    
                    ruleGroup++;
                    exit = false;
                    
                    // Rule R01 <----
                }
                else if ( iface.__isAlter("7-15", "] 6 : 15 ]", 7.0, 15.0 /* 7-15 */ , model) )
                {
                    // Rule R02 ---->
                    
                    iface.__doTrace("LFETShowCase", "20210614.091623", 8, 2, model);
                    
                    ruleGroup++;
                    exit = false;
                    
                    // Rule R02 <----
                }
                else if ( iface.__isAlter("16-65", "] 15 : 65 ]", 16.0, 65.0 /* 16-65 */ , model) )
                {
                    // Rule R03 ---->
                    
                    iface.__doTrace("LFETShowCase", "20210614.091623", 8, 3, model);
                    
                    ruleGroup++;
                    exit = false;
                    
                    // Rule R03 <----
                }
                else
                {
                    // Rule R04 ---->
                    
                    iface.__doTrace("LFETShowCase", "20210614.091623", 8, 4, model);
                    
                    iface.__doMeldung("F001", "Alter ungültig: Gültige Werte sind 0 bis 65", 
                         "Bitte geben Sie ein gültiges Alter ein,\n"
                       + "zulässig sind Werte zwischen 0 und 65." /* F001 */ , model);
                    
                    ruleGroup++;
                    exit = false;
                    
                    // Rule R04 <----
                }
            }
            else if ( ruleGroup == 2 )
            {
                if ( iface.__isAbgeschlossenerTarif("ZE", "Zahnersatz", "" /* ZE */ , model) )
                {
                    // Rule R05 ---->
                    
                    iface.__doTrace("LFETShowCase", "20210614.091623", 8, 5, model);
                    
                    ruleGroup++;
                    exit = false;
                    
                    // Rule R05 <----
                }
                else if ( iface.__isAbgeschlossenerTarif("ZB", "Zahnbehandlung", "" /* ZB */ , model) )
                {
                    // Rule R06 ---->
                    
                    iface.__doTrace("LFETShowCase", "20210614.091623", 8, 6, model);
                    
                    ruleGroup++;
                    exit = false;
                    
                    // Rule R06 <----
                }
                else
                {
                    // Rule R07 ---->
                    
                    iface.__doTrace("LFETShowCase", "20210614.091623", 8, 7, model);
                    
                    iface.__doMeldung("F002", "Tarif ungültig", 
                         "Bitte geben Sie einen gültigen Tarif ein, zulässig sind hier:\n"
                       + "- Zahnersatz\n"
                       + "- Zahnbehandlung" /* F002 */ , model);
                    
                    ruleGroup++;
                    exit = false;
                    
                    // Rule R07 <----
                }
            }
            else
            {
                // Rule R08 ---->
                
                iface.__doTrace("LFETShowCase", "20210614.091623", 8, 8, model);
                
                exit = true;
                
                // Rule R08 <----
            }
        
        }
        
        // Epilog Standard ---->
        // profile LFET.Java.Epilog.Standard.Interface.Dt.ini not found
        // used LF-ET 2.1.5 (210417a) build in default

    }

}
 
// Epilog Standard <----

// End of generated Java source code
// Generated by LF-ET 2.1.5 (210417a), https://www.lohrfink.de/lfet

